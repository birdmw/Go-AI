Day 1 - found repo of 50K games
Day 2 - found sgfsummary.py, an old program I can borrow code from. Will search for more similar programs.
Day 3 - Abandoned sgfsummary.py in favor of doing own method. Will extract game info first into pandas
Day 4 - today I will try to parse on this expression: ; or (space/tab/newline/empty char)
	using regex to fo a lazy search ABC(\[.+?\]) to parse information
day 5 - installed gomill 0.7.4 from Matthew Woodcraft at MIT 2014-12-05. This should allow sgf conversion to game states


day 1 real project:
	now have 225k games, of which 50k are pro vs. pro, the rest are 6d+
	training a model on each # of moves up to 10 today. Then tomorrow I will use each trained 		model to build a pipeline of games

94.51% of time spent predicting is on RFC
70% of train time is spent on gradient boosted classifiers (but this is not a big deal)

doing a fitting measure

fitting on move 13


RFC fit 21.7335720062 seconds
GBC fit 398.726512909 seconds
LR fit 48.1363129616 seconds
ADA fit 82.0987489223 seconds
DTC fit 42.6971399784 seconds
GNB fit 1.10797691345 seconds
/home/birdmw/anaconda/lib/python2.7/site-packages/sklearn/lda.py:371: UserWarning: Variables are collinear.
  warnings.warn("Variables are collinear.")
lda fit 25.0474169254 seconds
/home/birdmw/anaconda/lib/python2.7/site-packages/sklearn/qda.py:133: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")
qda fit 21.4073619843 seconds
===== models for 12 COMPLETE =====
cross-validating
rfc predict time 0.423183202744 seconds
gbc predict time 0.169462919235 seconds
lr predict time 0.0239160060883 seconds
ada predict time 0.667721986771 seconds
dtc predict time 0.0594120025635 seconds
gnb predict time 0.196177005768 seconds
lda predict time 0.0238978862762 seconds
qda predict time 2.29785394669 seconds
cross val complete
calculating roc_aucs...
roc_aucs:
0.522689736787
0.512723476097
0.515128019702
0.515918069766
0.518790668189
0.501703063878
0.515455003108
0.506823971105

qda: SVD did not converge

models:0,1,2,3,4,5,6
rfc,gbc,lr,ada,dtc,gnb,lda


switching to random forest trained on next x moves (2 to start)

restructured entire code to be classed

discovered handicap games and pruned them out

introduced novelty exclusion

sqrt(novelty)

n_estimators up to 20 from default=10

